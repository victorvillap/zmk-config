/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
  &kp TAB  &kp Q  &kp W     &kp E  &kp R      &kp T      &kp Y  &kp U      &kp I    &kp O     &kp P  &kp BSPC
&kp LCTRL  &kp A  &kp S     &kp D  &kp F      &kp G      &kp H  &kp J      &kp K    &kp L  &kp SEMI   &kp SQT
&kp LSHFT  &kp Z  &kp X     &kp C  &kp V      &kp B      &kp N  &kp M  &kp COMMA  &kp DOT  &kp FSLH   &kp ESC
                         &kp LGUI  &mo 1  &kp SPACE    &kp RET  &mo 2   &kp RALT
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
  &kp TAB       &kp N1  &kp N2            &kp N3             &kp N4                &kp N5                   &kp N6           &kp N7            &kp N8           &kp N9         &kp N0   &kp CLEAR
 &kp HASH  &kp AT_SIGN  &trans  &kp SINGLE_QUOTE  &kp DOUBLE_QUOTES  &kp LEFT_PARENTHESIS    &kp RIGHT_PARENTHESIS         &kp PLUS         &kp MINUS  &kp KP_MULTIPLY      &kp SLASH   &kp EQUAL
&kp LSHFT       &trans  &trans     &kp LESS_THAN     &kp LEFT_BRACE      &kp LEFT_BRACKET        &kp RIGHT_BRACKET  &kp RIGHT_BRACE  &kp GREATER_THAN           &trans  &kp BACKSLASH  &kp INSERT
                                        &kp LGUI             &trans             &kp SPACE                  &kp RET           &trans          &kp RALT
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
   &kp F1     &kp F2      &kp F3    &kp F4         &kp F5     &kp F6          &kp F7    &kp F8         &kp F9    &kp F10   &kp F11      &kp F12
&kp CARET  &kp GRAVE  &kp DOLLAR    &trans  &kp AMPERSAND   &kp PIPE        &kp LEFT  &kp DOWN         &kp UP   &kp DOWN  &kp HOME  &kp PAGE_UP
&kp LSHFT     &trans   &kp TILDE    &trans         &trans     &trans    &kp QUESTION  &kp EXCL  &kp SEMICOLON  &kp COLON   &kp END    &kp PG_DN
                                  &kp LGUI         &trans  &kp SPACE         &kp RET    &trans       &kp RALT
            >;
        };

        extra_layer {
            bindings = <
    &trans        &trans        &trans        &trans        &trans        &trans    &kp PRINTSCREEN  &kp SCROLLLOCK  &kp PAUSE_BREAK  &trans  &trans  &trans
    &trans        &trans        &trans        &trans        &trans        &trans             &trans          &trans           &trans  &trans  &trans  &trans
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4             &trans          &trans           &trans  &trans  &trans  &trans
                                              &trans        &trans        &trans             &trans          &trans           &trans
            >;
        };
    };
};
