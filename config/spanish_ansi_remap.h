#pragma once

#define ES_EURO RA(E)
#define ES_MULTIPLY LS(N8)
#define ES_SINGLE_QUOTE MINUS
#define ES_PLUS RIGHT_BRACKET
#define ES_N_Tilde SEMI
#define ES_ACUTE SQT
#define ES_MINUS FSLH
#define ES_HASH RA(N3)
#define ES_AT_SIGN RA(N2)
#define ES_DOUBLE_QUOTES LS(N2)
#define ES_SLASH LS(N7)
#define ES_EQUAL LS(N0)
#define ES_BACKSLASH RA(GRAVE)
#define ES_CARET LS(LEFT_BRACKET)
#define ES_GRAVE LEFT_BRACKET
#define ES_DOLLAR LS(N4)
#define ES_CEDILLA NON_US_HASH
#define ES_AMPERSAND LS(N6)
#define ES_PIPE RA(N1)
#define ES_DOT LS(N3)
#define ES_TILDE RA(N4)
#define ES_SEMICOLON LS(COMMA)
#define ES_COLON LS(DOT)

#define ES_LEFT_BRACKET RA(LEFT_BRACKET)
#define ES_RIGHT_BRACKET RA(RIGHT_BRACKET)
#define ES_LEFT_BRACE RA(SQT)
#define ES_RIGHT_BRACE RA(NON_US_HASH)
#define ES_LESS_THAN NON_US_BACKSLASH
#define ES_GREATER_THAN LS(NON_US_BACKSLASH)
#define ES_LEFT_PARENTHESIS LS(N8)
#define ES_RIGHT_PARENTHESIS LS(N9)
#define ES_OPEN_QUESTION LS(EQUAL)
#define ES_CLOSE_QUESTION LS(MINUS)
#define ES_OPEN_ADMIRATION EQUAL
#define ES_CLOSE_ADMIRATION LS(N1)